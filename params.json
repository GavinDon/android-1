{"name":"Ohel Shem for Android","tagline":"The official Android app","body":"[![Kotlin](https://img.shields.io/badge/kotlin-1.0.0-blue.svg)](http://kotlinlang.org) ![Version 6.0](https://img.shields.io/badge/Version-6.0-yellow.svg) [![License Apache](https://img.shields.io/badge/License-Apache%202.0-red.svg)](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nOhel Shem for Android\r\n===========\r\n\r\n[![Get it on Google Play](http://i.imgur.com/NIZaIXm.png?1)](https://play.google.com/store/apps/details?id=com.yoavst.changesystemohelshem)\r\n\r\nOhel Shem (Hebrew: אהל שם‎) is an Israeli high school located in the city of Ramat Gan. \r\nIt has about 1,550 students studying in 45 classes, from ninth to twelfth grade, and about 160 teachers and 40 workers.\r\n\r\n![Ohel Shem Logo](http://i.imgur.com/Yy1Z5aX.png)\r\n\r\n## Ohel Shem :heart: OSS\r\nThis project is part of 'Ohel Shem OSS', our attempt at providing open standard for modern school.\r\n\r\n# App\r\n\r\nThis app is for students, allowing them to be updated with the most important data:\r\n\r\n* Timetable\r\n* Timetable's daily changes\r\n* Tests\r\n\r\n![screenshots](http://i.imgur.com/cZh4KQx.jpg?)\r\n\r\n\r\n# Technology behind\r\n\r\nThis application is based on [Api-JVM](http://ohelshem.github.io/api-jvm/), the official Ohel-Shem API for JVM platform (Java, Kotlin, Scala, Groovy...) \r\n\r\nHere are some of most cutting edge technologies available in 2016 used in the app:\r\n\r\n## Kotlin\r\nStatically typed programming language for the JVM, Android and the browser. Kotlin to Java is like C++ to C.  \r\nKotlin libraries used in this project:\r\n\r\n* Anko - A DSL for layout and extension methods for Android development, Written  by JetBrains.\r\n* Injekt - Dependency Injection library, based on Kotlin's delegation support.\r\n* Fuel - The easiest HTTP networking library in Kotlin for Android.\r\n* KotPref - Android SharedPreference delegation for Kotlin.\r\n\r\n## Vector images\r\nMost of the app's images are vector graphics.  \r\n> Vector graphics is the use of geometrical primitives such as points, lines, curves, and shapes or polygons—all of which are based on mathematical expressions—to represent images in computer graphics \r\n\r\nVector graphics allow the app to look perfect on any screen resolution, including QHD and 4K. (Tested on G4 with QHD screen).\r\n\r\nSome of the icons were taken from those icon sets. Credit for them:\r\n\r\nhttps://www.iconfinder.com/iconsets/kameleon-free-pack  \r\nhttps://www.iconfinder.com/iconsets/flat-color-icons\r\nhttps://www.iconfinder.com/iconsets/little-boy\r\n\r\n## Modularity\r\nThe project functionality is very modular. Every feature got his own controller, including:\r\n\r\n* `DBController` - responsible of storing the data of the application.\r\n* `OffsetDataController` - responsible on reading an `offset data` - The way timetable and tests are saved.\r\n* `TimetableController` - responsible on managing the timetable and tests.\r\n* `ApiController` - responsible on querying the api\r\n\r\nEach of those controller are interfaces, make them easy to test and pass by. Their implementations has the suffix `Impl`.  \r\nBeside that, there are few wrappers for the implementations:\r\n\r\n* `DBControllerWrapper` - cache on the RAM the data used by `DBController`, which works with disk storage.\r\n* `TimetableControllerWrapper` - support for overriding the regular timetable.\r\n\r\nAnd there are some debug mode specific wrappers:\r\n\r\n* `DBControllerDebugWrapper` - disable cache update time checking when debug mode is enabled.\r\n* `RequestsControllerDebugWrapper` - make the request goes to an offline file if debug mode is enabled.\r\n\r\n## Offset Data\r\nThe app has to store the timetable and the tests for the whole school. It is a lot of data.\r\nThe data is a list of strings.\r\nEvery time the app starts, it has to load the user's specific data.\r\nThe best solution will be loading only the user's data to the memory.  \r\nThat is why we dropped JSON, since `GSON` and `Jackson` load all the data to the memory first.  \r\nWe could go with XML, but it would increase the file size.  \r\n\r\nThe result was custom format we created - Offset data.  \r\nIt is based on 2 files. The first include the data itself, separated by a delimiter. \r\nThe second file store the offset of each class of the school from the beginning of the file.\r\n\r\n### Example\r\nLet's say we count offset in bytes, and there are only 3 classes at school, each of them having 3 hours only.\r\nThe first file will be:\r\n```\r\nfirst_lesson_for_first_class|second_lesson_for_first_class|third_lesson_for_first_class|first_lesson_for_second_class|second_lesson_for_second_class|third_lesson_for_second_class|first_lesson_for_third_class|second_lesson_for_third_class|third_lesson_for_third_class\r\n```\r\n\r\nand the second file will be (in the actual file the data is stored in binary, but here a space between each number):\r\n\r\n```\r\n0 89 180 267\r\n```\r\n\r\nIn order to read the data of the second class, we read the second and third numbers from the second file. Then we read only the data from offset 89 to 180.\r\nNow, we parse this data by splitting it over the delimiter.\r\n\r\n### performance\r\nWe tested the performance of reading from timetable from JSON and data offset.\r\nfor 10,000 runs, it took GSON 9 seconds to read the data of a class. But, it took Offset data reader 1 second to read the data of a class.\r\n\r\n## Unit Testing\r\nHow can some release a product without testing?  \r\nSince the project functionality (unlike the UI with is android specific) is fully modular, it was possible to test every component.  \r\nAvailable tests:\r\n\r\n* Offset data read\r\n* Timetable functionality\r\n* Tests functionality\r\n\r\n# Becoming a part in the project\r\nWant to become a part in the project that makes the life of an Ohel Shem student better?  \r\nContact me at ![Yoavst.com](http://yoavst.com).\r\n\r\nAlso, I would merge any useful pull request.\r\n\r\n# License\r\n\r\n    Copyright 2016 Yoav Sternberg\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}